{"ast":null,"code":"export default {\n  name: 'CustomerInputForm',\n  props: ['editId'],\n  data() {\n    return {\n      customer: {\n        first_name: '',\n        last_name: '',\n        gender: ''\n      }\n    };\n  },\n  watch: {\n    editId(val) {\n      if (val) {\n        let current = this.$store.state.customers.filter(i => {\n          if (i.id == val) return true;else false;\n        })[0];\n        this.customer.first_name = current.first_name;\n        this.customer.last_name = current.last_name;\n        this.customer.gender = current.gender;\n      } else {\n        this.resetFormData();\n      }\n    }\n  },\n  computed: {\n    currentDate() {\n      return new Date().toString();\n    },\n    editAddText() {\n      return this.editId ? \"Edit\" : \"Insert\";\n    }\n  },\n  methods: {\n    resetFormData() {\n      this.customer = {\n        first_name: '',\n        last_name: '',\n        gender: ''\n      };\n    },\n    submit(event) {\n      event.preventDefault();\n      var payload = this.customer;\n      payload['date'] = this.currentDate;\n      if (!this.editId) {\n        payload['id'] = this.$store.state.customers.length != 0 ? Math.max(...this.$store.state.customers.map(i => i.id)) + 1 : 0;\n        const customer = {\n          ...payload\n        };\n        this.$store.dispatch('addCustomer', customer);\n        this.resetFormData();\n      } else {\n        payload['id'] = this.editId;\n        const customer = {\n          ...payload\n        };\n        this.$store.dispatch('editCustomer', customer);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","data","customer","first_name","last_name","gender","watch","editId","val","current","$store","state","customers","filter","i","id","resetFormData","computed","currentDate","Date","toString","editAddText","methods","submit","event","preventDefault","payload","length","Math","max","map","dispatch"],"sources":["F:\\TechFillter-CRUD-Assignment\\crud-with-vue-js\\src\\components\\CustomerInputForm.vue"],"sourcesContent":["<template>\n<div>\n    <form @submit=\"submit($event)\">\n        <div class=\"field\">\n            <label class=\"label\">{{editAddText}} First Name</label>\n            <div class=\"control\">\n                <input class=\"input\" v-model=\"customer.first_name\" type=\"text\" placeholder=\"First Name\" required>\n            </div>\n        </div>\n        <div class=\"field\">\n            <label class=\"label\">{{editAddText}} Last Name</label>\n            <div class=\"control\">\n                <input class=\"input\" v-model=\"customer.last_name\" type=\"text\" placeholder=\"Last Name\" required>\n            </div>\n        </div>\n        <div class=\"field\">\n            <label class=\"label\">{{editAddText}} Date</label>\n            <div class=\"control\">\n                <input class=\"input\" v-model=\"currentDate\" type=\"text\" disabled>\n            </div>\n        </div>\n        \n        <div class=\"field-body\">\n            <div class=\"field is-narrow\">\n            <label class=\"label\">{{editAddText}} Gender</label>    \n            <div class=\"control\">\n                <label class=\"radio\">\n                <input type=\"radio\" v-model=\"customer.gender\" value=\"Male\" name='gender' required>\n                Male\n                </label>\n                <label class=\"radio\">\n                <input type=\"radio\" v-model=\"customer.gender\" value=\"Female\" name='gender'>\n                Female\n                </label>\n            </div>\n            </div>\n        </div>\n\n        <div class=\"field is-grouped\" style=\"margin-top:20px\">\n            <div class=\"control\">\n                <button class=\"button is-link\">{{editAddText}} Customer</button>\n            </div>\n        </div>\n    </form>\n</div>\n</template>\n\n<script>\nexport default {\n    name:'CustomerInputForm',\n    props:['editId'],\n    data(){\n        return {\n            customer:{\n                first_name:'',\n                last_name:'',\n                gender:'',\n            }\n        }\n    },\n    watch:{\n        editId(val){\n            if(val){\n                let current = this.$store.state.customers.filter(i => {\n                    if(i.id==val) return true;\n                    else false;\n                })[0]\n\n                this.customer.first_name = current.first_name;\n                this.customer.last_name = current.last_name;\n                this.customer.gender = current.gender;\n            }else{\n                this.resetFormData()\n            }\n        }\n    },\n    computed:{\n        currentDate(){\n            return new Date().toString();\n        },\n        editAddText(){\n            return this.editId ? \"Edit\":\"Insert\";\n        }\n    },\n    methods:{\n        resetFormData() {\n\n                this.customer = {\n                first_name:'',\n                last_name:'',\n                gender:'',\n                }\n        },\n        submit(event){\n            event.preventDefault();  \n            var payload = this.customer;\n            payload['date'] = this.currentDate;\n            \n            if(!this.editId){\n                payload['id'] =  this.$store.state.customers.length!=0? Math.max(...this.$store.state.customers.map(i => i.id)) + 1 : 0;\n                const customer = {...payload};\n                this.$store.dispatch('addCustomer',customer);\n                this.resetFormData()\n            }else{\n                payload['id'] =   this.editId;\n                const customer = {...payload}\n                this.$store.dispatch('editCustomer',customer);                \n            }\n        }\n    }\n}\n</script>"],"mappings":"AAgDA,eAAe;EACXA,IAAI,EAAC,mBAAmB;EACxBC,KAAK,EAAC,CAAC,QAAQ,CAAC;EAChBC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,QAAQ,EAAC;QACLC,UAAU,EAAC,EAAE;QACbC,SAAS,EAAC,EAAE;QACZC,MAAM,EAAC;MACX;IACJ;EACJ,CAAC;EACDC,KAAK,EAAC;IACFC,MAAMA,CAACC,GAAG,EAAC;MACP,IAAGA,GAAG,EAAC;QACH,IAAIC,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,CAAA,IAAK;UAClD,IAAGA,CAAC,CAACC,EAAE,IAAEP,GAAG,EAAE,OAAO,IAAI,MACpB,KAAK;QACd,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAACN,QAAQ,CAACC,UAAS,GAAIM,OAAO,CAACN,UAAU;QAC7C,IAAI,CAACD,QAAQ,CAACE,SAAQ,GAAIK,OAAO,CAACL,SAAS;QAC3C,IAAI,CAACF,QAAQ,CAACG,MAAK,GAAII,OAAO,CAACJ,MAAM;MACzC,CAAC,MAAI;QACD,IAAI,CAACW,aAAa,EAAC;MACvB;IACJ;EACJ,CAAC;EACDC,QAAQ,EAAC;IACLC,WAAWA,CAAA,EAAE;MACT,OAAO,IAAIC,IAAI,EAAE,CAACC,QAAQ,EAAE;IAChC,CAAC;IACDC,WAAWA,CAAA,EAAE;MACT,OAAO,IAAI,CAACd,MAAK,GAAI,MAAM,GAAC,QAAQ;IACxC;EACJ,CAAC;EACDe,OAAO,EAAC;IACJN,aAAaA,CAAA,EAAG;MAER,IAAI,CAACd,QAAO,GAAI;QAChBC,UAAU,EAAC,EAAE;QACbC,SAAS,EAAC,EAAE;QACZC,MAAM,EAAC;MACP;IACR,CAAC;IACDkB,MAAMA,CAACC,KAAK,EAAC;MACTA,KAAK,CAACC,cAAc,EAAE;MACtB,IAAIC,OAAM,GAAI,IAAI,CAACxB,QAAQ;MAC3BwB,OAAO,CAAC,MAAM,IAAI,IAAI,CAACR,WAAW;MAElC,IAAG,CAAC,IAAI,CAACX,MAAM,EAAC;QACZmB,OAAO,CAAC,IAAI,IAAK,IAAI,CAAChB,MAAM,CAACC,KAAK,CAACC,SAAS,CAACe,MAAM,IAAE,CAAC,GAAEC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACnB,MAAM,CAACC,KAAK,CAACC,SAAS,CAACkB,GAAG,CAAChB,CAAA,IAAKA,CAAC,CAACC,EAAE,CAAC,IAAI,IAAI,CAAC;QACvH,MAAMb,QAAO,GAAI;UAAC,GAAGwB;QAAO,CAAC;QAC7B,IAAI,CAAChB,MAAM,CAACqB,QAAQ,CAAC,aAAa,EAAC7B,QAAQ,CAAC;QAC5C,IAAI,CAACc,aAAa,EAAC;MACvB,CAAC,MAAI;QACDU,OAAO,CAAC,IAAI,IAAM,IAAI,CAACnB,MAAM;QAC7B,MAAML,QAAO,GAAI;UAAC,GAAGwB;QAAO;QAC5B,IAAI,CAAChB,MAAM,CAACqB,QAAQ,CAAC,cAAc,EAAC7B,QAAQ,CAAC;MACjD;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}