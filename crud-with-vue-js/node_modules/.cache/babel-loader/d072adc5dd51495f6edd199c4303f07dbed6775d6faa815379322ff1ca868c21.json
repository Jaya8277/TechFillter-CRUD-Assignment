{"ast":null,"code":"import CustomerInputForm from '../components/CustomerInputForm.vue';\nexport default {\n  name: 'CustomerView',\n  components: {\n    CustomerInputForm\n  },\n  data() {\n    return {\n      showAdd: true,\n      editId: ''\n    };\n  },\n  computed: {\n    data() {\n      return this.$store.state.customers;\n    },\n    columns() {\n      return this.$store.state.customers.length > 0 ? Object.keys(this.$store.state.customers[0]) : [];\n    }\n  },\n  methods: {\n    editCustomer(customer) {\n      this.editId = customer.id;\n      this.showAdd = false;\n    },\n    addCustomer() {\n      this.editId = \"\";\n      this.showAdd = true;\n    },\n    deleteCustomer(customer) {\n      this.$swal({\n        title: 'Are you sure?',\n        text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!'\n      }).then(result => {\n        if (result.value) {\n          this.$store.dispatch('removeCustomer', customer).then(res => {\n            if (res) this.$swal('Deleted!', 'Record has been deleted.', 'success');else this.$swal('Fail!', 'Fail to delete record.', 'error');\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["CustomerInputForm","name","components","data","showAdd","editId","computed","$store","state","customers","columns","length","Object","keys","methods","editCustomer","customer","id","addCustomer","deleteCustomer","$swal","title","text","type","showCancelButton","confirmButtonText","then","result","value","dispatch","res"],"sources":["F:\\TechFillter-CRUD-Assignment\\crud-with-vue-js\\src\\views\\CustomerView.vue"],"sourcesContent":["<template> \n<div class=\"columns\">\n    <div class=\"column is-three-fifths\">\n        <table v-if=\"data.length!=0\" class=\"table\">\n            <thead>\n                <tr>\n                    <th v-for=\"(column,index) in columns\" :key=\"index\">{{column}}</th>\n                    <th>#</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(row,index_row) in data\" :key=\"index_row\" v-bind:class=\"{ editing: editId === row.id }\" >\n                    <td v-for=\"(column,index) in columns\" :key=\"index\"> {{row[column]}} </td>    \n                    <td>\n                        <p class=\"buttons\">\n                            <a class=\"button is-small is-primary\" @click=\"editCustomer(row)\">Edit</a>\n                            <a class=\"button is-small is-danger\" @click=\"deleteCustomer(row.id)\">Delete</a>\n                        </p>\n                    </td>   \n                </tr>\n            </tbody>\n        </table> \n        <div v-else class=\"notification is-danger\">\n            Warning !<strong> No Data to Show</strong>\n        </div>\n    </div>\n    <div class=\"column\">\n        <a href=\"#\" v-show=\"showAdd == false\" @click=\"addCustomer()\" class=\"button is-small is-danger\" style=\"float:right;margin-top:-20px\" >X</a>\n        <CustomerInputForm :editId=\"editId\"></CustomerInputForm>\n    </div>\n</div>    \n</template>\n\n<script>\n\nimport CustomerInputForm from '../components/CustomerInputForm.vue';\n\nexport default {\n    name:'CustomerView',\n    components:{\n        CustomerInputForm,\n    },\n    data() {\n            return {\n                showAdd:true,\n                editId:'',\n            }\n        },\n    computed:{\n            data(){\n                return this.$store.state.customers;\n            },\n            columns(){\n                return this.$store.state.customers.length>0 ?\n                       Object.keys(this.$store.state.customers[0]) : []\n            }\n        },\n    methods:{\n            editCustomer(customer){\n                this.editId = customer.id;\n                this.showAdd = false;\n            },\n            addCustomer(){\n                this.editId = \"\";\n                this.showAdd = true;\n            },\n            deleteCustomer(customer){\n                this.$swal({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    type: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Yes, delete it!'\n                    }).then((result) => {\n                    if (result.value) {\n                        \n                        this.$store.dispatch('removeCustomer',customer).then((res)=>{\n                            if(res) this.$swal(\n                                    'Deleted!',\n                                    'Record has been deleted.',\n                                    'success'\n                                    )\n                            else this.$swal(\n                                    'Fail!',\n                                    'Fail to delete record.',\n                                    'error'\n                                    )                                 \n                        });\n                        \n\n                    }\n                    })\n            }\n        }\n        \n}\n</script>\n<style>\n.editing {\n    background-color: #fff8db;\n}\n</style>\n"],"mappings":"AAmCA,OAAOA,iBAAgB,MAAO,qCAAqC;AAEnE,eAAe;EACXC,IAAI,EAAC,cAAc;EACnBC,UAAU,EAAC;IACPF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACC,OAAO;MACHC,OAAO,EAAC,IAAI;MACZC,MAAM,EAAC;IACX;EACJ,CAAC;EACLC,QAAQ,EAAC;IACDH,IAAIA,CAAA,EAAE;MACF,OAAO,IAAI,CAACI,MAAM,CAACC,KAAK,CAACC,SAAS;IACtC,CAAC;IACDC,OAAOA,CAAA,EAAE;MACL,OAAO,IAAI,CAACH,MAAM,CAACC,KAAK,CAACC,SAAS,CAACE,MAAM,GAAC,IACnCC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACN,MAAM,CAACC,KAAK,CAACC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAC;IAC1D;EACJ,CAAC;EACLK,OAAO,EAAC;IACAC,YAAYA,CAACC,QAAQ,EAAC;MAClB,IAAI,CAACX,MAAK,GAAIW,QAAQ,CAACC,EAAE;MACzB,IAAI,CAACb,OAAM,GAAI,KAAK;IACxB,CAAC;IACDc,WAAWA,CAAA,EAAE;MACT,IAAI,CAACb,MAAK,GAAI,EAAE;MAChB,IAAI,CAACD,OAAM,GAAI,IAAI;IACvB,CAAC;IACDe,cAAcA,CAACH,QAAQ,EAAC;MACpB,IAAI,CAACI,KAAK,CAAC;QACPC,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE,mCAAmC;QACzCC,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,iBAAiB,EAAE;MACnB,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;QACpB,IAAIA,MAAM,CAACC,KAAK,EAAE;UAEd,IAAI,CAACrB,MAAM,CAACsB,QAAQ,CAAC,gBAAgB,EAACb,QAAQ,CAAC,CAACU,IAAI,CAAEI,GAAG,IAAG;YACxD,IAAGA,GAAG,EAAE,IAAI,CAACV,KAAK,CACV,UAAU,EACV,0BAA0B,EAC1B,SAAQ,CACR,MACH,IAAI,CAACA,KAAK,CACP,OAAO,EACP,wBAAwB,EACxB,OAAM,CACN;UACZ,CAAC,CAAC;QAGN;MACA,CAAC;IACT;EACJ;AAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}